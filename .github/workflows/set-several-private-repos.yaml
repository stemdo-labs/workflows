name: Convert Repositories to Private

on:
  workflow_dispatch:

jobs:
  read-repos:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.read_repos.outputs.REPO_NAMES }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Read repository names from JSON
      id: read_repos
      run: |
        echo "Reading repository names from repos.json"
        REPO_NAMES=$(jq -c '.' repos.json)
        echo "REPO_NAMES=$REPO_NAMES" >> $GITHUB_OUTPUT

  generate-token:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.private-repos-token.outputs.token }}
    steps:
      - name: private-repos-install-token
        id: private-repos-token
        uses: getsentry/action-github-app-token@v3
        with:
          app_id: ${{ secrets.DELETEMEPLEASESTEMDO_APP_ID }}
          private_key: ${{ secrets.DELETEMEPLEASESTEMDO_PRIVATE_KEY }}

  convert_to_private:
    needs: [read-repos, generate-token]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.read-repos.outputs.repos) }}

    steps:
    - name: Convert repository to private
      env:
        MY_TOKEN: ${{ needs.generate-token.outputs.token }}
        REPO_NAME: ${{ matrix.repo }}
        OWNER: ${{ github.repository_owner }}
      run: |
        echo "Converting $REPO_NAME to private"
        echo "https://api.github.com/repos/$OWNER/$REPO_NAME"
        RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
          -X PATCH \
          -H "Authorization: token $MY_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$OWNER/$REPO_NAME \
          -d '{"private": true}')

        echo "Response code: $RESPONSE"
        if [ "$RESPONSE" -ne 200 ]; then
          echo "Failed to convert $REPO_NAME to private. HTTP status code: $RESPONSE"
          cat response.json
          exit 1
        fi