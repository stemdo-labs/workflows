name: Convert Repositories to Private

on:
  workflow_dispatch:

jobs:
  list-repos:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: List Org Repos
      id: list-all-repos
      env:
        TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        PAGE=1
        REPO_NAMES=()
        while :; do
          URL="https://api.github.com/orgs/stemdo-labs/repos?page=$PAGE&per_page=100"
          if [ -n "$TOKEN" ]; then
            RESPONSE=$(curl -s -H "Authorization: token $TOKEN" "$URL")
          else
            RESPONSE=$(curl -s "$URL")
          fi

          REPOS=$(echo "$RESPONSE" | jq -r '.[].name')

          if [ -z "$REPOS" ]; then
              break
          fi

          REPO_NAMES+=($REPOS)
          PAGE=$((PAGE + 1))
        done

        echo "${REPO_NAMES[@]}" | jq -R -s -c 'split(" ")' > repos.json
        echo "repos.json created with content:"
        cat repos.json

  read-repos:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.read_repos.outputs.REPO_NAMES }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Read repository names from JSON
      id: read_repos
      run: |
        echo "Reading repository names from repos.json"
        REPO_NAMES=$(jq -c '.' repos.json)
        echo "REPO_NAMES=$REPO_NAMES" >> $GITHUB_OUTPUT

  convert_to_private:
    needs: read-repos
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.read-repos.outputs.repos) }}

    steps:
    - name: Convert repository to private
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        REPO_NAME: ${{ matrix.repo }}
        OWNER: ${{ github.repository_owner }}
      run: |
        echo "Converting $REPO_NAME to private"
        echo "https://api.github.com/repos/$OWNER/$REPO_NAME"
        RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
          -X PATCH \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$OWNER/$REPO_NAME \
          -d '{"private": true}')

        echo "Response code: $RESPONSE"
        if [ "$RESPONSE" -ne 200 ]; then
          echo "Failed to convert $REPO_NAME to private. HTTP status code: $RESPONSE"
          exit 1
        fi